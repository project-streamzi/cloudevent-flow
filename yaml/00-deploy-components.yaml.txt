apiVersion: apps/v1
kind: Deployment
metadata:
  name: environment-variable-operator-deployment
spec:
  selector:
    matchLabels:
      app: environment-variable-operator
  replicas: 1
  template:
    metadata:
      labels:
        app: environment-variable-operator
    spec:
      containers:
      - name: environment-variable-operator
        image: docker.io/streamzi/environment-variable-operator:latest
        ports:
        - containerPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventflow-operator
spec:
  selector:
    matchLabels:
      app: eventflow-operator
  replicas: 1
  template:
    metadata:
      labels:
        app: eventflow-operator
    spec:
      containers:
      - name: eventflow-operator
        image: docker.io/streamzi/eventflow-operator:latest

---

#This could probably be made into a deployment
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: eventflow-ui
  name: eventflow-ui
spec:
  replicas: 1
  selector:
    app: eventflow-ui
    deploymentconfig: eventflow-ui
  template:
    metadata:
      labels:
        app: eventflow-ui
        deploymentconfig: eventflow-ui
    spec:
      containers:
      - image: docker.io/streamzi/eventflow-ui@sha256:3bd2fe0f3cf3cad570820f70aee456d40c6d65e8583188cbbd67540668bfffb9
        imagePullPolicy: IfNotPresent
        name: eventflow-ui
        ports:
        - containerPort: 8080
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: eventflow-ui
  name: eventflow-ui
spec:
  ports:
  - name: web
    port: 80
    targetPort: 8080
  selector:
    app: eventflow-ui
    deploymentconfig: eventflow-ui

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: eventflow-ui
  name: eventflow-ui
spec:
  port:
    targetPort: web
  to:
    kind: Service
    name: eventflow-ui
